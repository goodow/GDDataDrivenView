// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: view_model.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - GDDViewModelRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface GDDViewModelRoot : GPBRootObject
@end

#pragma mark - GDDMyExampleViewModel

typedef GPB_ENUM(GDDMyExampleViewModel_FieldNumber) {
  GDDMyExampleViewModel_FieldNumber_ItemId = 1,
  GDDMyExampleViewModel_FieldNumber_Title = 2,
};

/**
 * GDDMyExampleViewController 对应的数据模型默认为 GDDMyExampleViewModel, 使用命名约定以避免额外配置.
 * 假设 GDDMyExampleViewController 的 URL 拉起格式为 "forkSchema://views/MyExample?itemId=101&title=forkTitle",
 * 解析参数得到数据 \@{\@"itemId": \@"101", \@"title": \@"forkTitle"}, 该字典将被转换为强类型后传递给接收者.
 **/
@interface GDDMyExampleViewModel : GPBMessage

/** 数据类型转换时自动将字符串类型的参数值转换为这里声明的数字类型 */
@property(nonatomic, readwrite) int32_t itemId;

/** 标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
